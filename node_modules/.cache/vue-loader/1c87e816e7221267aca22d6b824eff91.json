{"remainingRequest":"/Users/felipas/Desktop/todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/felipas/Desktop/todo-app/src/components/Todos.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/felipas/Desktop/todo-app/src/components/Todos.vue","mtime":1594755873556},{"path":"/Users/felipas/Desktop/todo-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/felipas/Desktop/todo-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/felipas/Desktop/todo-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/felipas/Desktop/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/felipas/Desktop/todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogCmlzLWNvbXBsZXRlIHsgCgp9Cg=="},{"version":3,"sources":["Todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;;AAEA","file":"Todos.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-app class=\"text-center\">\n<h1 class=\"mt-10 mb-5\"> Todos</h1>\n\n<div class=\"d-flex flex-row flex-wrap justify-center\">\n<div \n@dblclick=\"onDblClick(todo)\" \nv-for=\"(todos, index) in allTodos\" \n:key=\"index\"\n:class=\"{'if-complete':red }\"\nclass=\"ma-5 text-center \">\n<v-card\ncolor=\"green d-flex justify-center align-center\"\nheight=\"90px\"\nwidth=\"300px\"\n\n>{{todos.title}} \n<div class=\"text-right\">\n<v-btn  @click=\"deleteTodo(todos.id)\" icon> <v-icon color=\"white\">mdi-delete</v-icon></v-btn>\n</div>\n</v-card>\n</div>\n</div>\n\n  </v-app>\n</template>\n<script>\nimport { mapGetters, mapActions} from 'vuex';\nexport default {\n  methods: {\n    ...mapActions([\"fetchTodo\",\"deleteTodo\", \"updateTodo\"]),\n\n    onDblClick(todo) {\n      const updTodo = {\n        id: todo.id,\n        title: todo.title,\n        completed: !todo.completed\n      };\n  },\n  computed: {\n    ...mapGetters(['allTodos'])},\n  created() {\n    this.fetchTodo();\n  }\n  }\n}\n</script>\n<style> \nis-complete { \n\n}\n</style>"]}]}